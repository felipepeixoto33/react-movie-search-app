{"ast":null,"code":"var _jsxFileName = \"/home/felipepeixoto/Documents/GitHub/react-movie-search-app/src/components/SearchMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchMovies() {\n  _s();\n\n  //states - query, movies\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async event => {\n    event.preventDefault();\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=2b5f8f1e12d7b989c1a3b4c252162b15&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url); // Await for the response from the url searched.\n\n      const data = await res.json(); // Await for the conversion to json.\n\n      const results = data.results;\n      setMovies(results); //console.log(movies);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: searchMovies,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"query\",\n        children: \"Movie Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"i.e. Jurassic Park\",\n        value: query,\n        onChange: e => setQuery(e.target.value) //Each time the user digits, query receives the actual value on this input.\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: movies.filter(movie => movie.poster_path).map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchMovies, \"A5Q53hr/y+zqHAz15wFmuqejARs=\");\n\n_c = SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["/home/felipepeixoto/Documents/GitHub/react-movie-search-app/src/components/SearchMovies.js"],"names":["React","useState","MovieCard","SearchMovies","query","setQuery","movies","setMovies","searchMovies","event","preventDefault","url","res","fetch","data","json","results","err","console","log","e","target","value","filter","movie","poster_path","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMO,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,GAAG,GAAI,2GAA0GP,KAAM,6BAA7H;;AAEA,QAAI;AACF,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB,CADE,CAC4B;;AAC9B,YAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CAFE,CAE6B;;AAC/B,YAAMC,OAAO,GAAGF,IAAI,CAACE,OAArB;AACAT,MAAAA,SAAS,CAACS,OAAD,CAAT,CAJE,CAKF;AACD,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAdD;;AAgBA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAET,YAAjC;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,oBAJd;AAKE,QAAA,KAAK,EAAEJ,KALT;AAME,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAN3B,CAM6C;;AAN7C;AAAA;AAAA;AAAA;AAAA,cAJF,eAYE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEGhB,MAAM,CACJiB,MADF,CACUC,KAAD,IAAWA,KAAK,CAACC,WAD1B,EAEEC,GAFF,CAEOF,KAAD,iBACH,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHH;AAFH;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AA4BD;;GAjDuBrB,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from 'react';\nimport MovieCard from './MovieCard';\n\nexport default function SearchMovies() {\n  //states - query, movies\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async (event) => {\n    event.preventDefault();\n\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=2b5f8f1e12d7b989c1a3b4c252162b15&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url); // Await for the response from the url searched.\n      const data = await res.json(); // Await for the conversion to json.\n      const results = data.results;\n      setMovies(results);\n      //console.log(movies);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={searchMovies}>\n        <label className=\"label\" htmlFor=\"query\">\n          Movie Name\n        </label>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. Jurassic Park\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)} //Each time the user digits, query receives the actual value on this input.\n        />\n        <button className=\"button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"card-list\">\n        {/* Map: Loop through each child element in the 'movie array' and to something with them. */}\n        {movies\n          .filter((movie) => movie.poster_path)\n          .map((movie) => (\n            <MovieCard movie={movie} />\n          ))}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}